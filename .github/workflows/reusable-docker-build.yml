name: Reusable Docker Build and Push

on:
  workflow_call:
    inputs:
      image-name:
        description: 'Docker image name (without registry prefix)'
        required: true
        type: string
      dockerfile-path:
        description: 'Path to Dockerfile'
        required: false
        type: string
        default: 'Dockerfile'
      context:
        description: 'Docker build context'
        required: false
        type: string
        default: '.'
      platforms:
        description: 'Target platforms for build'
        required: false
        type: string
        default: 'linux/amd64,linux/arm64'
      registry:
        description: 'Container registry'
        required: false
        type: string
        default: 'ghcr.io'
      push-on-pr:
        description: 'Push image on pull requests'
        required: false
        type: boolean
        default: false
      tag-prefix:
        description: 'Prefix for tags'
        required: false
        type: string
        default: ''
      image-title:
        description: 'Image title for metadata'
        required: false
        type: string
        default: ''
      image-description:
        description: 'Image description for metadata'
        required: false
        type: string
        default: ''
    secrets:
      registry-username:
        description: 'Registry username (optional, defaults to github.actor)'
        required: false
      registry-password:
        description: 'Registry password (defaults to GITHUB_TOKEN)'
        required: false
    outputs:
      image-digest:
        description: 'Image digest'
        value: ${{ jobs.build.outputs.digest }}
      image-tags:
        description: 'Image tags'
        value: ${{ jobs.build.outputs.tags }}
      image-url:
        description: 'Full image URL with tag'
        value: ${{ jobs.build.outputs.image-url }}

env:
  REGISTRY: ${{ inputs.registry }}
  IMAGE_NAME: ${{ inputs.image-name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      tags: ${{ steps.meta.outputs.tags }}
      image-url: ${{ steps.output.outputs.image-url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.registry-username || github.actor }}
          password: ${{ secrets.registry-password || secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,prefix=${{ inputs.tag-prefix }}
            type=ref,event=pr,prefix=${{ inputs.tag-prefix }}
            type=sha,prefix=${{ inputs.tag-prefix }}{{branch}}-
            type=raw,value=${{ inputs.tag-prefix }}latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=${{ inputs.image-title || env.IMAGE_NAME }}
            org.opencontainers.image.description=${{ inputs.image-description }}
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile-path }}
          platforms: ${{ inputs.platforms }}
          push: ${{ github.event_name != 'pull_request' || inputs.push-on-pr }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image URL
        id: output
        run: |
          MAIN_TAG="${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ inputs.tag-prefix }}latest"
          if [[ "${{ github.ref }}" != "refs/heads/${{ github.event.repository.default_branch }}" ]]; then
            MAIN_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          fi
          echo "image-url=${MAIN_TAG}" >> $GITHUB_OUTPUT
          echo "Built and pushed: ${MAIN_TAG}"
